{"version":3,"file":"agm-direction.directive.js","sourceRoot":"","sources":["../../../src/directive/agm-direction.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, Input, Output, OnChanges, OnInit, EventEmitter, OnDestroy } from '@angular/core';\nimport { GoogleMapsAPIWrapper } from '@agm/core';\nimport { InfoWindow, GoogleMap, Marker } from '@agm/core/services/google-maps-types';\n\ndeclare var google: any;\n@Directive({\n  selector: 'agm-direction',\n})\nexport class AgmDirection implements OnChanges, OnInit, OnDestroy {\n\n  // LatLng | String | google.maps.Place\n  @Input() origin: any;\n\n  // LatLng | String | google.maps.Place\n  @Input() destination: any;\n\n  // Options\n  @Input() travelMode: String = 'DRIVING';\n  @Input() transitOptions: any = undefined;\n  @Input() drivingOptions: any = undefined;\n  @Input() waypoints: any = [];\n  @Input() optimizeWaypoints: Boolean = true;\n  @Input() provideRouteAlternatives: Boolean = false;\n  @Input() avoidHighways: Boolean = false;\n  @Input() avoidTolls: Boolean = false;\n  @Input() renderOptions: any;\n  @Input() panel: object | undefined;\n  @Input() markerOptions: { origin: any, destination: any, waypoints: any };\n  @Input() infoWindow: InfoWindow;\n\n  // Remove or draw direction\n  @Input() visible: Boolean = true;\n\n  // Render exist direction\n  @Input() renderRoute: any;\n\n  // Direction change event handler\n  @Output() onChange: EventEmitter<any> = new EventEmitter<any>();\n\n  // Direction response for the new request\n  @Output() onResponse: EventEmitter<any> = new EventEmitter<any>();\n\n  // Send a custom infowindow\n  @Output() sendInfoWindow: EventEmitter<InfoWindow> = new EventEmitter<InfoWindow>();\n\n  // Status of Directions Query (google.maps.DirectionsStatus.OVER_QUERY_LIMIT)\n  @Output() status: EventEmitter<string> = new EventEmitter<string>();\n\n  // Marker drag event handler\n  @Output() originDrag: EventEmitter<any> = new EventEmitter<any>();\n  @Output() destinationDrag: EventEmitter<any> = new EventEmitter<any>();\n\n  public directionsService: any = undefined;\n  public directionsDisplay: any = undefined;\n\n  // Use for custom marker\n  private originMarker: any;\n  private destinationMarker: any;\n  private waypointsMarker: any = [];\n\n  // Use for visible flag\n  private isFirstChange: Boolean = true;\n\n  constructor(\n    private gmapsApi: GoogleMapsAPIWrapper,\n  ) { }\n\n  ngOnInit() {\n    if (this.visible === true) {\n      this.directionDraw();\n    }\n  }\n\n  ngOnChanges(obj: any) {\n    /**\n     * When visible is false then remove the direction layer\n     */\n    if (!this.visible) {\n      try {\n        this.removeMarkers();\n        this.removeDirections();\n      } catch (e) { }\n    } else {\n      if (this.isFirstChange) {\n        /**\n         * When visible is false at the first time\n         */\n        if (typeof this.directionsDisplay === 'undefined') {\n          this.directionDraw();\n        }\n        this.isFirstChange = false;\n        return;\n      }\n\n      /**\n       * When renderOptions are not first change then reset the display\n       */\n      if (typeof obj.renderOptions !== 'undefined') {\n        if (obj.renderOptions.firstChange === false) {\n          this.removeMarkers();\n          this.removeDirections();\n        }\n      }\n      this.directionDraw();\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroyMarkers();\n    this.removeDirections();\n  }\n\n  /**\n   * This event is fired when the user creating or updating this direction\n   */\n  private directionDraw() {\n    this.gmapsApi.getNativeMap().then((map: GoogleMap) => {\n\n      if (typeof this.directionsDisplay === 'undefined') {\n        this.directionsDisplay = new google.maps.DirectionsRenderer(this.renderOptions);\n        this.directionsDisplay.setMap(map);\n        this.directionsDisplay.addListener('directions_changed', () => {\n          this.onChange.emit(this.directionsDisplay.getDirections());\n        });\n      }\n\n      if (typeof this.directionsService === 'undefined') {\n        this.directionsService = new google.maps.DirectionsService;\n      }\n\n      if (typeof this.panel === 'undefined') {\n        this.directionsDisplay.setPanel(null);\n      } else {\n        this.directionsDisplay.setPanel(this.panel);\n      }\n\n      // Render exist direction\n      if (typeof this.renderRoute === 'object' && this.renderRoute !== null) {\n        this.directionsDisplay.setDirections(this.renderRoute);\n        this.renderRoute = null; // or set undefined, ''\n      } else {\n\n        // Request new direction\n        this.directionsService.route({\n          origin: this.origin,\n          destination: this.destination,\n          travelMode: this.travelMode,\n          transitOptions: this.transitOptions,\n          drivingOptions: this.drivingOptions,\n          waypoints: this.waypoints,\n          optimizeWaypoints: this.optimizeWaypoints,\n          provideRouteAlternatives: this.provideRouteAlternatives,\n          avoidHighways: this.avoidHighways,\n          avoidTolls: this.avoidTolls,\n        }, (response: any, status: any) => {\n\n          this.onResponse.emit(response);\n\n          // Emit Query Status\n          this.status.emit(status);\n\n          /**\n           * DirectionsStatus\n           * https://developers.google.com/maps/documentation/javascript/directions#DirectionsStatus\n           */\n          switch (status) {\n            case 'OK':\n              this.directionsDisplay.setDirections(response);\n\n              /**\n               * Emit The DirectionsResult Object\n               * https://developers.google.com/maps/documentation/javascript/directions?hl=en#DirectionsResults\n               */\n              // Custom Markers\n              if (typeof this.markerOptions !== 'undefined') {\n\n                this.destroyMarkers();\n\n                // Set custom markers\n                const _route = response.routes[0].legs[0];\n                try {\n                  // Origin Marker\n                  if (typeof this.markerOptions.origin !== 'undefined') {\n                    this.markerOptions.origin.map = map;\n                    this.markerOptions.origin.position = _route.start_location;\n                    this.originMarker = this.setMarker(\n                      map,\n                      this.originMarker,\n                      this.markerOptions.origin,\n                      _route.start_address,\n                    );\n\n                    if (this.markerOptions.origin.draggable) {\n                      this.originMarker.addListener('dragend', () => {\n                        this.origin = this.originMarker.position;\n                        this.directionDraw();\n                        this.originDrag.emit(this.origin);\n                      });\n                    }\n                  }\n                  // Destination Marker\n                  if (typeof this.markerOptions.destination !== 'undefined') {\n                    this.markerOptions.destination.map = map;\n                    this.markerOptions.destination.position = _route.end_location;\n                    this.destinationMarker = this.setMarker(\n                      map,\n                      this.destinationMarker,\n                      this.markerOptions.destination,\n                      _route.end_address,\n                    );\n                    if (this.markerOptions.destination.draggable) {\n                      this.destinationMarker.addListener('dragend', () => {\n                        this.destination = this.destinationMarker.position;\n                        this.directionDraw();\n                        this.destinationDrag.emit(this.destination);\n                      });\n                    }\n                  }\n\n                  // Waypoints Marker\n                  if (typeof this.markerOptions.waypoints !== 'undefined') {\n\n                    this.waypoints.forEach((waypoint: any, index: number) => {\n\n                      // If waypoints are not array then set all the same\n                      if (!Array.isArray(this.markerOptions.waypoints)) {\n                        this.markerOptions.waypoints.map = map;\n                        this.markerOptions.waypoints.position = _route.via_waypoints[index];\n                        this.waypointsMarker.push(this.setMarker(\n                          map,\n                          waypoint,\n                          this.markerOptions.waypoints,\n                          _route.via_waypoints[index],\n                        ));\n                      } else {\n                        this.markerOptions.waypoints[index].map = map;\n                        this.markerOptions.waypoints[index].position = _route.via_waypoints[index];\n                        this.waypointsMarker.push(this.setMarker(\n                          map,\n                          waypoint,\n                          this.markerOptions.waypoints[index],\n                          _route.via_waypoints[index],\n                        ));\n                      }\n\n                    }); // End forEach\n\n                  }\n                } catch (err) {\n                  console.error('MarkerOptions error.', err);\n                }\n              }\n\n              break;\n\n            default:\n              // console.warn(status);\n              break;\n          } // End switch\n        });\n      }\n    });\n  }\n\n  /**\n   * Custom Origin and Destination Icon\n   * @param map map\n   * @param marker marker\n   * @param markerOpts properties\n   * @param content marker's infowindow content\n   * @returns new marker\n   * @memberof AgmDirection\n   */\n  private setMarker(map: GoogleMap, marker: any, markerOpts: any, content: string): Marker {\n    if (typeof this.infoWindow === 'undefined') {\n      this.infoWindow = new google.maps.InfoWindow({});\n      this.sendInfoWindow.emit(this.infoWindow);\n    }\n    marker = new google.maps.Marker(markerOpts);\n    marker.addListener('click', () => {\n      const infowindoContent: string = typeof markerOpts.infoWindow === 'undefined' ? content : markerOpts.infoWindow;\n      this.infoWindow.setContent(infowindoContent);\n      this.infoWindow.open(map, marker);\n    });\n    return marker;\n  }\n\n  /**\n   * This event is fired when remove markers\n   */\n  private removeMarkers(): void {\n    if (typeof this.originMarker !== 'undefined') {\n      this.originMarker.setMap(null);\n    }\n    if (typeof this.destinationMarker !== 'undefined') {\n      this.destinationMarker.setMap(null);\n    }\n    this.waypointsMarker.forEach((w: any) => {\n      if (typeof w !== 'undefined') {\n        w.setMap(null);\n      }\n    });\n  }\n\n  /**\n   * This event is fired when remove directions\n   */\n  private removeDirections(): void {\n    this.directionsDisplay.setPanel(null);\n    this.directionsDisplay.setMap(null);\n    this.directionsDisplay = undefined;\n  }\n\n  /**\n   * This event is fired when destroy markers\n   */\n  private destroyMarkers(): void {\n    // Remove origin markers\n    try {\n      if (typeof this.originMarker !== 'undefined') {\n        google.maps.event.clearListeners(this.originMarker, 'click');\n        if (this.markerOptions.origin.draggable) {\n          google.maps.event.clearListeners(this.originMarker, 'dragend');\n        }\n      }\n      if (typeof this.destinationMarker !== 'undefined') {\n        google.maps.event.clearListeners(this.destinationMarker, 'click');\n        if (this.markerOptions.origin.draggable) {\n          google.maps.event.clearListeners(this.destinationMarker, 'dragend');\n        }\n      }\n      this.waypointsMarker.forEach((w: any) => {\n        if (typeof w !== 'undefined') {\n          google.maps.event.clearListeners(w, 'click');\n        }\n      });\n      this.removeMarkers();\n\n    } catch (err) {\n      console.error('Can not reset custom marker.', err);\n    }\n  }\n}\n"]}